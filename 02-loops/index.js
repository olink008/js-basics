/*  -----------------------------------------------------------------------------------------------

Циклы - простой способ сделать какое-то действие несколько раз.



---------- Цикл For ----------

for ( [инициализация счетчика] ; [условие выполнения цикла] ; [изменение счетчика] ) {
  [инструкция1 ];
  [инструкция2] ;
  ………………….
  [инструкция n] ;
};


Цикл выполняет alert(i) для i от 0 до (но не включая) 3:
for (let i = 0; i < 3; i++) {           // выведет 0, затем 1, затем 2
  alert(i);
}


Начало выполняется один раз, а затем каждая итерация заключается в проверке условия, 
после которой выполняется тело и шаг.


let i = 0;                              // Выполнить начало
if (i < 3) { alert(i); i++ }            // Если условие == true → Выполнить тело, Выполнить шаг
if (i < 3) { alert(i); i++ }            // Если условие == true → Выполнить тело, Выполнить шаг
if (i < 3) { alert(i); i++ }            // Если условие == true → Выполнить тело, Выполнить шаг
                                        // ...конец, потому что теперь i == 3

---------------------------------------------------------------------------------------------------
*/










/* Чет & нечет. 
Написать программу, выводящую на экран 
только четные целые числа из диапазона 
от 1 до 20. Тоже самое для нечетных цифр. */

/*
for (let i = 2; i <= 20; i+=2) {        // чет
        alert(i);
}

for (let i = 1; i <= 20; i+=2) {        // нечет
        alert(i);
}
*/










/* Кратность 3-м. 
Написать программу, выводящую 
на экран целые числа от 1 до 20 
за исключением чисел, кратных 3. */

/*
for (let i = 0; i < 20; i++) {
    if (i % 3 !== 0) {
        alert(i);
    }
}
*/










/* Сумма диапазона. 
Пользователь задает диапазон чисел. 
Если данные некорректны – программа 
показывает ошибку. Вычислить сумму 
чисел в заданном диапазоне. */

/*
let numStart = +prompt('Введите 1-ое число');
let numEnd =   +prompt('Введите 2-ое число');
let sum = 0;

if (isNaN(numStart) || isNaN(numEnd) || numStart >= numEnd) {           // isNaN(value)     --- проверка на число
    alert('Ошибка');
} else {
    for (let i = numStart; i <= numEnd; i++) {
    sum += i;
    }
    alert(sum);
}
*/










/* 1. Сформировать для ученика список состоящий из 5 элементов (5 
переменных), каждый элемент которого — это оценка от 2 до 5.
Подсчитать среднее арифметическое и в соответствии с этим 
дать определение ученику: отличник, хорошист, троечник, двоечник.
2. Подсчитать количество каждой полученной оценки.
3. Сделать вывод информации в консоль. 
(решение с использованием массива вместо переменных будет 
плюсом)  */

/*
let ratings = [5, 4, 3, 4, 5];
let sum = 0;
let average;
let count5 = 0;
let count4 = 0;
let count3 = 0;
let count2 = 0;

for (let i = 0; i < ratings.length; i++) {
  sum += ratings[i];
  average = sum / ratings.length;
}

if (average > 4.5) {
    console.log('отличник');
} else if (sum > 3.5) {
    console.log('хорошист');
} else if (sum > 2.5) {
    console.log('троечник');
} else {
    console.log('двоечник');
}

for (let i = 0; i < ratings.length; i++) {
  switch (ratings[i]) {
    case 5:
      ++count5;
      break;
    case 4:
      ++count4;
      break;
    case 3:
      ++count3;
      break;
    case 2:
      ++count2;
      break;
  } 
}

console.log(`кол-во полученных "5" - ${count5}, 
"4" - ${count4}, "3" - ${count3}, "2" - ${count2}`);
*/










/*  -----------------------------------------------------------------------------------------------

---------- Цикл While ----------

while ( [условие выполнения цикла] ) {
  [инструкция1];
  [инструкция2] ;
  ………………….
  [инструкция n] ;
};


let i = 0;
while (i < 3) {             // выводит 0, затем 1, затем 2
  alert( i );
  i++;
}


let num = prompt('Введите кол-во записей');
while (isNaN(num)) {                                // is not a number
    num = prompt('Введите кол-во записей');
}
alert('Поздравляем! Вы ввели число!')



---------- Цикл Do/While ----------

do {
  [инструкция1 ];
  [инструкция2] ;
  ………………….
  [инструкция n] ;
} while ( [условие выполнения цикла] );


let num;
do {
    num = prompt('Введите кол-во записей');
} while (isNaN(num));

alert('Поздравляем! Вы ввели число!');

---------------------------------------------------------------------------------------------------
*/










/* Факториал. 
Написать программу, вычисляющую факториал числа. 
Число вводит пользователь, предусмотреть некорректный
ввод данных. */

/*
let num;
let result = 1;

do {
  num = prompt('Введите число');
} while (isNaN(num) || num < 0);

for (let i = 1; i <= num; i++) {
  result *= i;
}

console.log(result);
*/










/* Степень. 
Написать программу, вычисляющую степень числа,
введенного пользователем. Предусмотреть некорректный
ввод данных. */

/*
let num;
let degree;
let result = 1;

do {
  num = prompt('Введите число');
} while (isNaN(num) || num < 0);

do {
  degree = prompt('Введите степень');
} while (isNaN(degree) || degree < 0);

for (let i = 1; i <= degree; i++) {
  result *= num;
}

alert(`число ${num} в степени ${degree} = ${result}`);
*/










/* Числа фибоначчи. 
Написать программу,которая выводит в консоль 
первые 10 чисел из последовательности фибоначчи */

/*
let fibonacci = [0, 1];         // Первые два элемента последовательности Фибоначчи

for (i = 2; i < 10; i ++) {
  fibonacci[i] = fibonacci[i-1] + fibonacci[i-2];
}

console.log(fibonacci);
*/










/*  -----------------------------------------------------------------------------------------------

---------- Прерывание цикла: «break» ----------

Обычно цикл завершается при вычислении условия в false.
Но мы можем выйти из цикла в любой момент с помощью
специальной директивы break.

Например, следующий код подсчитывает сумму вводимых
чисел до тех пор, пока посетитель их вводит, а затем – выдаёт:

let sum = 0;
while (true) {
  let value = +prompt("Введите число", '');
  if (!value) break;
  sum += value;
}
alert( 'Сумма: ' + sum );



---------- Переход к следующей итерации: continue ----------

Директива continue – «облегчённая версия» break. При её
выполнении цикл не прерывается, а переходит к следующей
итерации (если условие все ещё равно true).
Её используют, если понятно, что на текущем повторе цикла
делать больше нечего.

Например, цикл ниже использует continue,
чтобы выводить только нечётные значения:

for (let i = 0; i < 10; i++) {    
 if (i % 2 == 0) continue;      // если true, пропустить оставшуюся часть тела цикла
 alert(i);                      // 1, затем 3, 5, 7, 9
}

---------------------------------------------------------------------------------------------------
*/










/* Используя цикл while, do/while модернизировать программу,
конвертер валют, так что бы она выполнялась пока
пользователь не захочет выйти. Подсказка, сделать
дополнительный вопрос, в начале каждого выполнения,
который будет уточнять, выполнять программу или завершить. */

/*
let quest;

while (quest = confirm('Хотите выполнить конвертацию валюты?')) {
  let currency1 = prompt('Введите тип валюты, которую конвертировать USD, EUR, UAH', 'USD');
  let currency2 = prompt('Введите тип валюты, в которую конвертировать USD, EUR, UAH', 'UAH');
  let amount = +prompt('Введите конвертируемую сумму', '100');
  let exchangeRate = +prompt('Введите обменный курс', '30');
  let result = amount * exchangeRate;
  if (currency1 !== currency2) {
    switch (currency1) {
      case 'USD':
      case 'EUR':
      case 'UAH':
        switch (currency2) {
          case 'USD':
          case 'EUR':
          case 'UAH':
            alert(`${amount} ${currency1} = ${result} ${currency2}`);
        }
        break;
      default:
        alert('Возникла ошибка, попробуйте еще раз');
    }
  } else {
    alert('Возникла ошибка, попробуйте еще раз');
  }
} 
*/










/* Через цикл for и несколько операторов if узнать сколько чисел 
от 0 до 100 делятся без  остатка на 3, сколько на 5, а сколько 
на 3 и на 5 одновременно. Вывести эти количества  на экран 
после цикла. */

/*
count3  = 0;
count5  = 0;
count35 = 0;

for (let i = 1; i <= 100; i++) {
  if (i % 3 == 0) {
    count3++;
  }
  if (i % 5 == 0) {
    count5++;
  }
  if (i % 3 == 0 && i % 5 == 0) {
    count35++;
  }
}

alert(`От 0 до 100 делятся на 3 без  остатка - ${count3} числа, 
на 5 - ${count5} чисел, на 3 и на 5 одновременно ${count35} чисел`);
*/










/* Создать переменную isEven, которая изначально равна false. 
Через цикл while(!isEven)  с помощью prompt() просить 
пользователя ввести чётное число. Когда он введёт чётное, то 
присвоить переменной isEven true. Не забываем делать 
приведение типов и вспоминаем, как определять чётность 
чисел. */

/*
let isEven = false;
let evenNumber;

while (!isEven) {
  evenNumber = +prompt('Введите четное число');
  if (evenNumber != 0 && evenNumber % 2 == 0) {
    isEven = true;
    alert(isEven);
  }
}
*/










/* Выведите столбец (console.log) чисел 
от 1 до 100. */

/*
for (let i = 1; i <= 100; i++) {
  console.log(i);
}
*/










/* Выведите столбец чисел от 11 до 33. */

/*
for (let i = 11; i <= 33; i++) {
  console.log(i);
}
*/










/* С  помощью  цикла  найдите  сумму 
чисел от 1 до 100. */

/*
let sum = 0;

for (let i = 1; i <= 100; i++) {
  sum += i;
}
console.log(sum);
*/










/* ПРОВЕРКА НА КРАТНОСТЬ */

let a = +prompt('Желаемое число');
let b = +prompt('Крастность какому числу');

if (a % b === 0) {
   alert('Кратно');
} else {
  alert('Не кратно');
} 











/*  -----------------------------------------------------------------------------------------------
1. Какие виды циклов есть в JS?
2. Как называется одно выполнение тела цикла?
3. Что выполняет знак %?
4. Можно ли вкладывать циклы друг в друга?
---------------------------------------------------------------------------------------------------
*/
